{"{\"assumptions\":{},\"sourceRoot\":\"/Users/jakob/weiq/babel-preprocessor/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/jakob/weiq/babel-preprocessor\",\"filename\":\"/Users/jakob/weiq/babel-preprocessor/test/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jakob/weiq/babel-preprocessor\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.19.0:development":{"value":{"code":"\"use strict\";\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _assert = _interopRequireDefault(require(\"assert\"));\n\nvar _core = require(\"@babel/core\");\n\nvar _src = _interopRequireDefault(require(\"../src\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar tests = [{\n  file: 'prep'\n}];\ndescribe('transform code', function () {\n  tests.forEach(function (test) {\n    it('src/' + test.file + '.js', function (done) {\n      var transformed = (0, _core.transformFileSync)(_path.default.join(__dirname, `src/${test.file}.js`), {\n        plugins: [[_src.default, test.options]],\n        babelrc: false,\n        comments: false\n      }).code;\n\n      var expected = _fs.default.readFileSync(_path.default.join(__dirname, `expected/${test.file}.js`)).toString();\n\n      if (expected[expected.length - 1] === '\\n') expected = expected.slice(0, -1);\n\n      _assert.default.equal(transformed, expected);\n\n      done();\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJ0ZXN0cyIsImZpbGUiLCJkZXNjcmliZSIsImZvckVhY2giLCJ0ZXN0IiwiaXQiLCJkb25lIiwidHJhbnNmb3JtZWQiLCJ0cmFuc2Zvcm1GaWxlU3luYyIsInBhdGgiLCJqb2luIiwiX19kaXJuYW1lIiwicGx1Z2lucyIsInBsdWdpbiIsIm9wdGlvbnMiLCJiYWJlbHJjIiwiY29tbWVudHMiLCJjb2RlIiwiZXhwZWN0ZWQiLCJmcyIsInJlYWRGaWxlU3luYyIsInRvU3RyaW5nIiwibGVuZ3RoIiwic2xpY2UiLCJhc3NlcnQiLCJlcXVhbCJdLCJzb3VyY2VSb290IjoiL1VzZXJzL2pha29iL3dlaXEvYmFiZWwtcHJlcHJvY2Vzc29yL3Rlc3QvIiwic291cmNlcyI6WyJpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCBmcyBmcm9tICdmcyc7XG5pbXBvcnQgYXNzZXJ0IGZyb20gJ2Fzc2VydCc7XG5pbXBvcnQgeyB0cmFuc2Zvcm1GaWxlU3luYyB9IGZyb20gJ0BiYWJlbC9jb3JlJztcbmltcG9ydCBwbHVnaW4gZnJvbSAnLi4vc3JjJztcblxudmFyIHRlc3RzID0gW1xuXHR7IGZpbGU6ICdwcmVwJyB9LFxuXVxuXG5kZXNjcmliZSgndHJhbnNmb3JtIGNvZGUnLCBmdW5jdGlvbiAoKXtcblx0dGVzdHMuZm9yRWFjaChmdW5jdGlvbih0ZXN0KSB7XG5cdFx0aXQoJ3NyYy8nICsgdGVzdC5maWxlICsgJy5qcycsIGZ1bmN0aW9uIChkb25lKSB7XG5cdFx0XHR2YXIgdHJhbnNmb3JtZWQgPSB0cmFuc2Zvcm1GaWxlU3luYyhwYXRoLmpvaW4oX19kaXJuYW1lLCBgc3JjLyR7dGVzdC5maWxlfS5qc2ApLCB7XG5cdFx0XHRcdHBsdWdpbnM6IFtbcGx1Z2luLCB0ZXN0Lm9wdGlvbnNdXSxcblx0XHRcdFx0YmFiZWxyYzogZmFsc2UsXG5cdFx0XHRcdGNvbW1lbnRzOiBmYWxzZVxuXHRcdFx0fSkuY29kZTtcblxuXHRcdFx0dmFyIGV4cGVjdGVkID0gZnMucmVhZEZpbGVTeW5jKHBhdGguam9pbihfX2Rpcm5hbWUsIGBleHBlY3RlZC8ke3Rlc3QuZmlsZX0uanNgKSkudG9TdHJpbmcoKTtcblx0XHRcdGlmIChleHBlY3RlZFtleHBlY3RlZC5sZW5ndGggLSAxXSA9PT0gJ1xcbicpIGV4cGVjdGVkID0gZXhwZWN0ZWQuc2xpY2UoMCwgLTEpO1xuXHRcdFx0YXNzZXJ0LmVxdWFsKHRyYW5zZm9ybWVkLCBleHBlY3RlZCk7XG5cdFx0XHRkb25lKCk7XG5cdFx0fSk7XG5cdH0pO1xufSk7XG5cbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBLElBQUlBLEtBQUssR0FBRyxDQUNYO0VBQUVDLElBQUksRUFBRTtBQUFSLENBRFcsQ0FBWjtBQUlBQyxRQUFRLENBQUMsZ0JBQUQsRUFBbUIsWUFBVztFQUNyQ0YsS0FBSyxDQUFDRyxPQUFOLENBQWMsVUFBU0MsSUFBVCxFQUFlO0lBQzVCQyxFQUFFLENBQUMsU0FBU0QsSUFBSSxDQUFDSCxJQUFkLEdBQXFCLEtBQXRCLEVBQTZCLFVBQVVLLElBQVYsRUFBZ0I7TUFDOUMsSUFBSUMsV0FBVyxHQUFHLElBQUFDLHVCQUFBLEVBQWtCQyxhQUFBLENBQUtDLElBQUwsQ0FBVUMsU0FBVixFQUFzQixPQUFNUCxJQUFJLENBQUNILElBQUssS0FBdEMsQ0FBbEIsRUFBK0Q7UUFDaEZXLE9BQU8sRUFBRSxDQUFDLENBQUNDLFlBQUQsRUFBU1QsSUFBSSxDQUFDVSxPQUFkLENBQUQsQ0FEdUU7UUFFaEZDLE9BQU8sRUFBRSxLQUZ1RTtRQUdoRkMsUUFBUSxFQUFFO01BSHNFLENBQS9ELEVBSWZDLElBSkg7O01BTUEsSUFBSUMsUUFBUSxHQUFHQyxXQUFBLENBQUdDLFlBQUgsQ0FBZ0JYLGFBQUEsQ0FBS0MsSUFBTCxDQUFVQyxTQUFWLEVBQXNCLFlBQVdQLElBQUksQ0FBQ0gsSUFBSyxLQUEzQyxDQUFoQixFQUFrRW9CLFFBQWxFLEVBQWY7O01BQ0EsSUFBSUgsUUFBUSxDQUFDQSxRQUFRLENBQUNJLE1BQVQsR0FBa0IsQ0FBbkIsQ0FBUixLQUFrQyxJQUF0QyxFQUE0Q0osUUFBUSxHQUFHQSxRQUFRLENBQUNLLEtBQVQsQ0FBZSxDQUFmLEVBQWtCLENBQUMsQ0FBbkIsQ0FBWDs7TUFDNUNDLGVBQUEsQ0FBT0MsS0FBUCxDQUFhbEIsV0FBYixFQUEwQlcsUUFBMUI7O01BQ0FaLElBQUk7SUFDSixDQVhDLENBQUY7RUFZQSxDQWJEO0FBY0EsQ0FmTyxDQUFSIn0=","map":{"version":3,"names":["tests","file","describe","forEach","test","it","done","transformed","transformFileSync","path","join","__dirname","plugins","plugin","options","babelrc","comments","code","expected","fs","readFileSync","toString","length","slice","assert","equal"],"sourceRoot":"/Users/jakob/weiq/babel-preprocessor/test/","sources":["index.js"],"sourcesContent":["import path from 'path';\nimport fs from 'fs';\nimport assert from 'assert';\nimport { transformFileSync } from '@babel/core';\nimport plugin from '../src';\n\nvar tests = [\n\t{ file: 'prep' },\n]\n\ndescribe('transform code', function (){\n\ttests.forEach(function(test) {\n\t\tit('src/' + test.file + '.js', function (done) {\n\t\t\tvar transformed = transformFileSync(path.join(__dirname, `src/${test.file}.js`), {\n\t\t\t\tplugins: [[plugin, test.options]],\n\t\t\t\tbabelrc: false,\n\t\t\t\tcomments: false\n\t\t\t}).code;\n\n\t\t\tvar expected = fs.readFileSync(path.join(__dirname, `expected/${test.file}.js`)).toString();\n\t\t\tif (expected[expected.length - 1] === '\\n') expected = expected.slice(0, -1);\n\t\t\tassert.equal(transformed, expected);\n\t\t\tdone();\n\t\t});\n\t});\n});\n\n"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAIA,KAAK,GAAG,CACX;EAAEC,IAAI,EAAE;AAAR,CADW,CAAZ;AAIAC,QAAQ,CAAC,gBAAD,EAAmB,YAAW;EACrCF,KAAK,CAACG,OAAN,CAAc,UAASC,IAAT,EAAe;IAC5BC,EAAE,CAAC,SAASD,IAAI,CAACH,IAAd,GAAqB,KAAtB,EAA6B,UAAUK,IAAV,EAAgB;MAC9C,IAAIC,WAAW,GAAG,IAAAC,uBAAA,EAAkBC,aAAA,CAAKC,IAAL,CAAUC,SAAV,EAAsB,OAAMP,IAAI,CAACH,IAAK,KAAtC,CAAlB,EAA+D;QAChFW,OAAO,EAAE,CAAC,CAACC,YAAD,EAAST,IAAI,CAACU,OAAd,CAAD,CADuE;QAEhFC,OAAO,EAAE,KAFuE;QAGhFC,QAAQ,EAAE;MAHsE,CAA/D,EAIfC,IAJH;;MAMA,IAAIC,QAAQ,GAAGC,WAAA,CAAGC,YAAH,CAAgBX,aAAA,CAAKC,IAAL,CAAUC,SAAV,EAAsB,YAAWP,IAAI,CAACH,IAAK,KAA3C,CAAhB,EAAkEoB,QAAlE,EAAf;;MACA,IAAIH,QAAQ,CAACA,QAAQ,CAACI,MAAT,GAAkB,CAAnB,CAAR,KAAkC,IAAtC,EAA4CJ,QAAQ,GAAGA,QAAQ,CAACK,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAAX;;MAC5CC,eAAA,CAAOC,KAAP,CAAalB,WAAb,EAA0BW,QAA1B;;MACAZ,IAAI;IACJ,CAXC,CAAF;EAYA,CAbD;AAcA,CAfO,CAAR"}},"mtime":1663141158637},"{\"assumptions\":{},\"sourceRoot\":\"/Users/jakob/weiq/babel-preprocessor/src/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/jakob/weiq/babel-preprocessor\",\"filename\":\"/Users/jakob/weiq/babel-preprocessor/src/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jakob/weiq/babel-preprocessor\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"syntax-class-static-block\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.19.0:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _generator = _interopRequireDefault(require(\"@babel/generator\"));\n\nvar fs = _interopRequireWildcard(require(\"fs\"));\n\nvar babel = _interopRequireWildcard(require(\"@babel/core\"));\n\nvar p = _interopRequireWildcard(require(\"path\"));\n\nvar _child_process = require(\"child_process\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst PREP = 'PREP';\nconst PREPROCESS = 'PREPROCESS';\nconst END = 'END';\nconst INCLUDE = 'INCLUDE';\nconst STRINCLUDE = '$INCLUDE';\nconst DEFINE = 'DEFINE';\nconst PROCINCLUDE = 'PROCINCLUDE';\nconst STRPROCINCLUDE = '$PROCINCLUDE';\nconst IF = 'IF';\nconst ELSEIF = 'ELSEIF';\nconst ELSE = 'ELSE';\n\nfunction evalAst(node) {\n  return evalGlobal((0, _generator.default)(node).code);\n}\n\nfunction evalGlobal(code) {\n  return (void 0, eval)(code);\n}\n\nfunction _({\n  types\n}) {\n  return {\n    visitor: {\n      Statement: {\n        exit(path, state) {\n          handleStatement(path, state);\n        }\n\n      },\n\n      ExpressionStatement(path, state) {\n        if (path.node.expression.type === 'Identifier') {\n          const nm = path.node.expression.name;\n          if (nm === PREPROCESS || nm === PREP) handlePrep(path, state);else if (nm === END) handleEnd(path, state);else if (nm === ELSE) handleElse(path, state);\n        } else if (path.node.expression.type === 'CallExpression' && types.isIdentifier(path.node.expression.callee)) {\n          const nm = path.node.expression.callee.name;\n          if (nm === PREPROCESS || nm === PREP) handlePrepCall(path, state);else if (nm === INCLUDE) handleInclude(path, state);else if (nm === PROCINCLUDE) handleProcInclude(path, state);else if (nm === DEFINE) handleDefine(path, state);else if (nm === IF) handleIf(path, state);else if (nm === ELSEIF) handleElseIf(path, state);\n        }\n      },\n\n      MemberExpression(path, state) {\n        if (types.isIdentifier(path.node.object) && (path.node.object.name === PREP || path.node.object.name === PREPROCESS)) handlePrepAccess(path, state);\n      },\n\n      CallExpression(path, state) {\n        if (types.isIdentifier(path.node.callee)) {\n          const nm = path.node.callee.name;\n          if (nm === STRINCLUDE) handleStringInclude(path, state);else if (nm === STRPROCINCLUDE) handleStringProcessInclude(path, state);\n        }\n      }\n\n    }\n  };\n}\n\nfunction handleStatement(path, state) {\n  if (state.current && state.current.prep && path.parent === state.current.parent) {\n    state.current.code.push(path.node);\n    path.remove();\n  }\n\n  if (state.current && state.current.remove && path.parent === state.current.parent) path.remove();\n}\n\nfunction handlePrepAccess(path, state) {\n  const rslt = evalAst(path.node.property);\n\n  if (Object.prototype.toString.call(rslt) === '[object String]') {\n    path.replaceWith(t.stringLiteral(rslt));\n  } else path.replaceWithSourceString(rslt);\n}\n\nfunction handlePrep(path, state) {\n  if (!state.current || state.current && state.current.satisfied && !state.current.remove) {\n    if (state.current && state.current.prep) throw path.buildCodeFrameError(`nested ${path.node.expression.name} not allowed`);\n\n    if (!state.current) {\n      state.current = {\n        satisfied: true,\n        remove: false\n      };\n    }\n\n    state.current.prep = true;\n    state.current.parent = path.parent;\n    state.current.code = [];\n    path.remove();\n  } else {\n    state.current.prep = true;\n    path.remove();\n  }\n}\n\nfunction handleEnd(path, state) {\n  if (state.current && state.current.prep) {\n    if (!state.current || state.current && state.current.satisfied && !state.current.remove) {\n      let code = '';\n\n      for (let i = 0; i < state.current.code.length; i++) code += (0, _generator.default)(state.current.code[i]).code;\n\n      evalGlobal(code);\n    }\n\n    state.current.prep = false;\n    path.remove();\n  } else if (state.current) {\n    state.current = undefined;\n\n    if (state.nested) {\n      state.current = state.nested.pop();\n\n      if (state.nested.length === 0) {\n        state.nested = undefined;\n      }\n    }\n\n    path.remove();\n  }\n}\n\nfunction handlePrepCall(path, state) {\n  if (!state.current || state.current && state.current.satisfied) {\n    for (let i = 0; i < path.node.expression.arguments.length; i++) {\n      const fname = evalAst(path.node.expression.arguments[i]);\n      if (!fs.existsSync(fname)) throw path.buildCodeFrameError(`missing preprocessor file: ${p.join(process.cwd(), fname)}`);\n\n      try {\n        const code = fs.readFileSync(fname).toString();\n        const rslt = evalGlobal(code);\n      } catch (ex) {\n        throw path.buildCodeFrameError(ex);\n      }\n    }\n  }\n\n  path.remove();\n}\n\nfunction insertCode(path, state, code, filename) {\n  const rslt = babel.transform(code, {\n    ast: true,\n    filename\n  });\n\n  for (let i = 0; i < rslt.ast.program.body.length; i++) {\n    if (state.current && state.current.prep) state.current.code.push(rslt.ast.program.body[i]);else path.insertBefore(rslt.ast.program.body[i]);\n  }\n}\n\nfunction handleInclude(path, state) {\n  if (!state.current || state.current && state.current.satisfied && !state.current.remove) {\n    for (let i = 0; i < path.node.expression.arguments.length; i++) {\n      const fname = evalAst(path.node.expression.arguments[i]);\n      if (!fs.existsSync(fname)) throw path.buildCodeFrameError(`missing include file: ${p.join(process.cwd(), fname)}`);\n      const inc = fs.readFileSync(fname).toString();\n      insertCode(path, state, inc, fname);\n    }\n  }\n\n  path.remove();\n}\n\nfunction handleStringInclude(path, state) {\n  if (!state.current || state.current && state.current.satisfied && !state.current.remove) {\n    let inc = '';\n\n    for (let i = 0; i < path.node.arguments.length; i++) {\n      const fname = evalAst(path.node.arguments[i]);\n      if (!fs.existsSync(fname)) throw path.buildCodeFrameError(`missing include file: ${p.join(process.cwd(), fname)}`);\n      inc += fs.readFileSync(fname).toString();\n    }\n\n    path.replaceWith(t.stringLiteral(inc));\n  }\n}\n\nfunction handleProcInclude(path, state) {\n  if (!state.current || state.current && state.current.satisfied && !state.current.remove) {\n    let cmd = '';\n    let args = [];\n    let opts = {};\n    const len = path.node.expression.arguments.length;\n    if (len > 0) cmd = evalAst(path.node.expression.arguments[0]);\n    if (len > 1) args = eval((0, _generator.default)(path.node.expression.arguments[1]).code);\n    if (len > 2) opts = eval(`(${(0, _generator.default)(path.node.expression.arguments[2]).code})`);\n    const rslt = (0, _child_process.spawnSync)(cmd, args, opts);\n    const rsltStr = rslt.stdout ? rslt.stdout.toString() : rslt.stderr ? rslt.stderr.toString() : '';\n    insertCode(path, state, rsltStr, 'cmd');\n  }\n\n  path.remove();\n}\n\nfunction handleStringProcessInclude(path, state) {\n  if (!state.current || state.current && state.current.satisfied && !state.current.remove) {\n    let cmd = '';\n    let args = [];\n    let opts = {};\n    const len = path.node.arguments.length;\n    if (len > 0) cmd = evalAst(path.node.arguments[0]);\n    if (len > 1) args = eval((0, _generator.default)(path.node.arguments[1]).code);\n    if (len > 2) opts = eval(`(${(0, _generator.default)(path.node.arguments[2]).code})`);\n    const rslt = (0, _child_process.spawnSync)(cmd, args, opts);\n    const rsltStr = rslt.stdout ? rslt.stdout.toString() : rslt.stderr ? rslt.stderr.toString() : '';\n    path.replaceWith(t.stringLiteral(rsltStr));\n  }\n}\n\nfunction handleDefine(path, state) {\n  if (state.current && state.current.prep) throw path.buildCodeFrameError('DEFINE not allowed inside PREP, use normal variable declaration');\n  if (!state.current || state.current && state.current.satisfied && !state.current.remove) for (let i = 0; i < path.node.expression.arguments.length; i++) evalAst(path.node.expression.arguments[i]);\n  path.remove();\n}\n\nfunction handleIf(path, state) {\n  if (path.node.expression.arguments.length < 1 || path.node.expression.arguments.length > 1) throw path.buildCodeFrameError('only one argument to IF is allowed');\n  if (state.current && state.current.prep) throw path.buildCodeFrameError('IF not allowed inside PREP, use normal if statement');\n  let shouldEval = true;\n\n  if (state.current) {\n    if (state.current.remove) {\n      shouldEval = false;\n    }\n\n    if (!state.nested) state.nested = [];\n    state.nested.push(state.current);\n  } else {\n    state.current = {\n      prep: false,\n      parent: undefined\n    };\n  }\n\n  if (shouldEval) {\n    const rslt = evalAst(path.node.expression.arguments[0]);\n    state.current = rslt ? {\n      prep: state.current.prep,\n      satisfied: true,\n      remove: false,\n      code: [],\n      parent: path.parent\n    } : {\n      prep: state.current.prep,\n      satisfied: false,\n      remove: true,\n      code: [],\n      parent: path.parent\n    };\n  } else {\n    state.current = {\n      prep: state.current.prep,\n      satisfied: true,\n      remove: true,\n      code: [],\n      parent: path.parent\n    };\n  }\n\n  path.remove();\n}\n\nfunction handleElseIf(path, state) {\n  if (!state.current) throw path.buildCodeFrameError('missing IF statement');\n\n  if (state.current.satisfied) {\n    state.current.remove = true;\n  } else {\n    if (path.node.expression.arguments.length < 1 || path.node.expression.arguments.length > 1) throw path.buildCodeFrameError('only one argument to ELSEIF is allowed');\n    const rslt = evalAst(path.node.expression.arguments[0]);\n\n    if (rslt) {\n      state.current.satisfied = true;\n      state.current.remove = false;\n    } else {\n      state.current.remove = true;\n    }\n  }\n\n  path.remove();\n}\n\nfunction handleElse(path, state) {\n  if (!state.current) throw path.buildCodeFrameError('missing IF statement');\n\n  if (state.current.satisfied) {\n    state.current.remove = true;\n  } else {\n    state.current.satisfied = true;\n    state.current.remove = false;\n  }\n\n  path.remove();\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["PREP","PREPROCESS","END","INCLUDE","STRINCLUDE","DEFINE","PROCINCLUDE","STRPROCINCLUDE","IF","ELSEIF","ELSE","evalAst","node","evalGlobal","generate","code","eval","_","types","visitor","Statement","exit","path","state","handleStatement","ExpressionStatement","expression","type","nm","name","handlePrep","handleEnd","handleElse","isIdentifier","callee","handlePrepCall","handleInclude","handleProcInclude","handleDefine","handleIf","handleElseIf","MemberExpression","object","handlePrepAccess","CallExpression","handleStringInclude","handleStringProcessInclude","current","prep","parent","push","remove","rslt","property","Object","prototype","toString","call","replaceWith","t","stringLiteral","replaceWithSourceString","satisfied","buildCodeFrameError","i","length","undefined","nested","pop","arguments","fname","fs","existsSync","p","join","process","cwd","readFileSync","ex","insertCode","filename","babel","transform","ast","program","body","insertBefore","inc","cmd","args","opts","len","spawnSync","rsltStr","stdout","stderr","shouldEval"],"sourceRoot":"/Users/jakob/weiq/babel-preprocessor/src/","sources":["index.js"],"sourcesContent":["import * as t from '@babel/types';\nimport generate from '@babel/generator';\nimport * as fs from 'fs';\nimport * as babel from '@babel/core';\nimport * as p from 'path';\nimport { spawnSync } from 'child_process';\n\nconst PREP = 'PREP';\nconst PREPROCESS = 'PREPROCESS';\nconst END = 'END';\nconst INCLUDE = 'INCLUDE';\nconst STRINCLUDE = '$INCLUDE';\nconst DEFINE = 'DEFINE';\nconst PROCINCLUDE = 'PROCINCLUDE';\nconst STRPROCINCLUDE = '$PROCINCLUDE';\nconst IF = 'IF';\nconst ELSEIF = 'ELSEIF';\nconst ELSE = 'ELSE';\n\nfunction evalAst(node) {\n  return evalGlobal(generate(node).code);\n}\nfunction evalGlobal(code) {\n  return (void 0, eval)(code);\n}\n\nexport default function _({ types }) {\n  return {\n    visitor: {\n      Statement: {\n        exit(path, state) {\n          handleStatement(path, state);\n        }\n      },\n\n      ExpressionStatement(path, state) {\n        if (path.node.expression.type === 'Identifier') {\n          const nm = path.node.expression.name;\n          if (nm === PREPROCESS || nm === PREP) handlePrep(path, state);\n          else if (nm === END) handleEnd(path, state);\n          else if (nm === ELSE) handleElse(path, state);\n        } else if (\n          path.node.expression.type === 'CallExpression' &&\n          types.isIdentifier(path.node.expression.callee)\n        ) {\n          const nm = path.node.expression.callee.name;\n          if (nm === PREPROCESS || nm === PREP) handlePrepCall(path, state);\n          else if (nm === INCLUDE) handleInclude(path, state);\n          else if (nm === PROCINCLUDE) handleProcInclude(path, state);\n          else if (nm === DEFINE) handleDefine(path, state);\n          else if (nm === IF) handleIf(path, state);\n          else if (nm === ELSEIF) handleElseIf(path, state);\n        }\n      },\n\n      MemberExpression(path, state) {\n        if (\n          types.isIdentifier(path.node.object) &&\n          (path.node.object.name === PREP ||\n            path.node.object.name === PREPROCESS)\n        )\n          handlePrepAccess(path, state);\n      },\n\n      CallExpression(path, state) {\n        if (types.isIdentifier(path.node.callee)) {\n          const nm = path.node.callee.name;\n\n          if (nm === STRINCLUDE) handleStringInclude(path, state);\n          else if (nm === STRPROCINCLUDE)\n            handleStringProcessInclude(path, state);\n        }\n      }\n    }\n  };\n}\n\nfunction handleStatement(path, state) {\n  if (\n    state.current &&\n    state.current.prep &&\n    path.parent === state.current.parent\n  ) {\n    state.current.code.push(path.node);\n    path.remove();\n  }\n\n  if (\n    state.current &&\n    state.current.remove &&\n    path.parent === state.current.parent\n  )\n    path.remove();\n}\n\nfunction handlePrepAccess(path, state) {\n  const rslt = evalAst(path.node.property);\n  if (Object.prototype.toString.call(rslt) === '[object String]') {\n    path.replaceWith(t.stringLiteral(rslt));\n  } else path.replaceWithSourceString(rslt);\n}\n\nfunction handlePrep(path, state) {\n  if (\n    !state.current ||\n    (state.current && state.current.satisfied && !state.current.remove)\n  ) {\n    if (state.current && state.current.prep)\n      throw path.buildCodeFrameError(\n        `nested ${path.node.expression.name} not allowed`\n      );\n    if (!state.current) {\n      state.current = {\n        satisfied: true,\n        remove: false\n      };\n    }\n    state.current.prep = true;\n    state.current.parent = path.parent;\n    state.current.code = [];\n    path.remove();\n  } else {\n    state.current.prep = true;\n    path.remove();\n  }\n}\n\nfunction handleEnd(path, state) {\n  if (state.current && state.current.prep) {\n    if (\n      !state.current ||\n      (state.current && state.current.satisfied && !state.current.remove)\n    ) {\n      let code = '';\n      for (let i = 0; i < state.current.code.length; i++)\n        code += generate(state.current.code[i]).code;\n      evalGlobal(code);\n    }\n    state.current.prep = false;\n    path.remove();\n  } else if (state.current) {\n    state.current = undefined;\n    if (state.nested) {\n      state.current = state.nested.pop();\n      if (state.nested.length === 0) {\n        state.nested = undefined;\n      }\n    }\n    path.remove();\n  }\n}\n\nfunction handlePrepCall(path, state) {\n  if (!state.current || (state.current && state.current.satisfied)) {\n    for (let i = 0; i < path.node.expression.arguments.length; i++) {\n      const fname = evalAst(path.node.expression.arguments[i]);\n      if (!fs.existsSync(fname))\n        throw path.buildCodeFrameError(\n          `missing preprocessor file: ${p.join(process.cwd(), fname)}`\n        );\n      try {\n        const code = fs.readFileSync(fname).toString();\n        const rslt = evalGlobal(code);\n      } catch (ex) {\n        throw path.buildCodeFrameError(ex);\n      }\n    }\n  }\n\n  path.remove();\n}\n\nfunction insertCode(path, state, code, filename) {\n  const rslt = babel.transform(code, { ast: true, filename });\n  for (let i = 0; i < rslt.ast.program.body.length; i++) {\n    if (state.current && state.current.prep)\n      state.current.code.push(rslt.ast.program.body[i]);\n    else path.insertBefore(rslt.ast.program.body[i]);\n  }\n}\n\nfunction handleInclude(path, state) {\n  if (\n    !state.current ||\n    (state.current && state.current.satisfied && !state.current.remove)\n  ) {\n    for (let i = 0; i < path.node.expression.arguments.length; i++) {\n      const fname = evalAst(path.node.expression.arguments[i]);\n      if (!fs.existsSync(fname))\n        throw path.buildCodeFrameError(\n          `missing include file: ${p.join(process.cwd(), fname)}`\n        );\n      const inc = fs.readFileSync(fname).toString();\n      insertCode(path, state, inc, fname);\n    }\n  }\n  path.remove();\n}\n\nfunction handleStringInclude(path, state) {\n  if (\n    !state.current ||\n    (state.current && state.current.satisfied && !state.current.remove)\n  ) {\n    let inc = '';\n    for (let i = 0; i < path.node.arguments.length; i++) {\n      const fname = evalAst(path.node.arguments[i]);\n      if (!fs.existsSync(fname))\n        throw path.buildCodeFrameError(\n          `missing include file: ${p.join(process.cwd(), fname)}`\n        );\n      inc += fs.readFileSync(fname).toString();\n    }\n\n    path.replaceWith(t.stringLiteral(inc));\n  }\n}\n\nfunction handleProcInclude(path, state) {\n  if (\n    !state.current ||\n    (state.current && state.current.satisfied && !state.current.remove)\n  ) {\n    let cmd = '';\n    let args = [];\n    let opts = {};\n    const len = path.node.expression.arguments.length;\n    if (len > 0) cmd = evalAst(path.node.expression.arguments[0]);\n    if (len > 1) args = eval(generate(path.node.expression.arguments[1]).code);\n    if (len > 2)\n      opts = eval(`(${generate(path.node.expression.arguments[2]).code})`);\n\n    const rslt = spawnSync(cmd, args, opts);\n    const rsltStr = rslt.stdout\n      ? rslt.stdout.toString()\n      : rslt.stderr\n      ? rslt.stderr.toString()\n      : '';\n\n    insertCode(path, state, rsltStr, 'cmd');\n  }\n  path.remove();\n}\n\nfunction handleStringProcessInclude(path, state) {\n  if (\n    !state.current ||\n    (state.current && state.current.satisfied && !state.current.remove)\n  ) {\n    let cmd = '';\n    let args = [];\n    let opts = {};\n    const len = path.node.arguments.length;\n    if (len > 0) cmd = evalAst(path.node.arguments[0]);\n    if (len > 1) args = eval(generate(path.node.arguments[1]).code);\n    if (len > 2) opts = eval(`(${generate(path.node.arguments[2]).code})`);\n\n    const rslt = spawnSync(cmd, args, opts);\n    const rsltStr = rslt.stdout\n      ? rslt.stdout.toString()\n      : rslt.stderr\n      ? rslt.stderr.toString()\n      : '';\n    path.replaceWith(t.stringLiteral(rsltStr));\n  }\n}\n\nfunction handleDefine(path, state) {\n  if (state.current && state.current.prep)\n    throw path.buildCodeFrameError(\n      'DEFINE not allowed inside PREP, use normal variable declaration'\n    );\n\n  if (\n    !state.current ||\n    (state.current && state.current.satisfied && !state.current.remove)\n  )\n    for (let i = 0; i < path.node.expression.arguments.length; i++)\n      evalAst(path.node.expression.arguments[i]);\n  path.remove();\n}\n\nfunction handleIf(path, state) {\n  if (\n    path.node.expression.arguments.length < 1 ||\n    path.node.expression.arguments.length > 1\n  )\n    throw path.buildCodeFrameError('only one argument to IF is allowed');\n\n  if (state.current && state.current.prep)\n    throw path.buildCodeFrameError(\n      'IF not allowed inside PREP, use normal if statement'\n    );\n\n  let shouldEval = true;\n\n  if (state.current) {\n    if (state.current.remove) {\n      shouldEval = false;\n    }\n    if (!state.nested) state.nested = [];\n    state.nested.push(state.current);\n  } else {\n    state.current = { prep: false, parent: undefined };\n  }\n\n  if (shouldEval) {\n    const rslt = evalAst(path.node.expression.arguments[0]);\n\n    state.current = rslt\n      ? {\n          prep: state.current.prep,\n          satisfied: true,\n          remove: false,\n          code: [],\n          parent: path.parent\n        }\n      : {\n          prep: state.current.prep,\n          satisfied: false,\n          remove: true,\n          code: [],\n          parent: path.parent\n        };\n  } else {\n    state.current = {\n      prep: state.current.prep,\n      satisfied: true,\n      remove: true,\n      code: [],\n      parent: path.parent\n    };\n  }\n\n  path.remove();\n}\n\nfunction handleElseIf(path, state) {\n  if (!state.current) throw path.buildCodeFrameError('missing IF statement');\n\n  if (state.current.satisfied) {\n    state.current.remove = true;\n  } else {\n    if (\n      path.node.expression.arguments.length < 1 ||\n      path.node.expression.arguments.length > 1\n    )\n      throw path.buildCodeFrameError('only one argument to ELSEIF is allowed');\n\n    const rslt = evalAst(path.node.expression.arguments[0]);\n    if (rslt) {\n      state.current.satisfied = true;\n      state.current.remove = false;\n    } else {\n      state.current.remove = true;\n    }\n  }\n  path.remove();\n}\n\nfunction handleElse(path, state) {\n  if (!state.current) throw path.buildCodeFrameError('missing IF statement');\n\n  if (state.current.satisfied) {\n    state.current.remove = true;\n  } else {\n    state.current.satisfied = true;\n    state.current.remove = false;\n  }\n  path.remove();\n}\n"],"mappings":"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"}},"mtime":1663140945071},"{\"assumptions\":{},\"sourceRoot\":\"/Users/jakob/weiq/babel-preprocessor/src/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/jakob/weiq/babel-preprocessor\",\"filename\":\"/Users/jakob/weiq/babel-preprocessor/src/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jakob/weiq/babel-preprocessor\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.19.0:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _generator = _interopRequireDefault(require(\"@babel/generator\"));\n\nvar fs = _interopRequireWildcard(require(\"fs\"));\n\nvar babel = _interopRequireWildcard(require(\"@babel/core\"));\n\nvar p = _interopRequireWildcard(require(\"path\"));\n\nvar _child_process = require(\"child_process\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst PREP = 'PREP';\nconst PREPROCESS = 'PREPROCESS';\nconst END = 'END';\nconst INCLUDE = 'INCLUDE';\nconst STRINCLUDE = '$INCLUDE';\nconst DEFINE = 'DEFINE';\nconst PROCINCLUDE = 'PROCINCLUDE';\nconst STRPROCINCLUDE = '$PROCINCLUDE';\nconst IF = 'IF';\nconst ELSEIF = 'ELSEIF';\nconst ELSE = 'ELSE';\n\nfunction evalAst(node) {\n  return evalGlobal((0, _generator.default)(node).code);\n}\n\nfunction evalGlobal(code) {\n  return (void 0, eval)(code);\n}\n\nfunction _({\n  types\n}) {\n  return {\n    visitor: {\n      Statement: {\n        exit(path, state) {\n          handleStatement(path, state);\n        }\n\n      },\n\n      ExpressionStatement(path, state) {\n        if (path.node.expression.type === 'Identifier') {\n          const nm = path.node.expression.name;\n          if (nm === PREPROCESS || nm === PREP) handlePrep(path, state);else if (nm === END) handleEnd(path, state);else if (nm === ELSE) handleElse(path, state);\n        } else if (path.node.expression.type === 'CallExpression' && types.isIdentifier(path.node.expression.callee)) {\n          const nm = path.node.expression.callee.name;\n          if (nm === PREPROCESS || nm === PREP) handlePrepCall(path, state);else if (nm === INCLUDE) handleInclude(path, state);else if (nm === PROCINCLUDE) handleProcInclude(path, state);else if (nm === DEFINE) handleDefine(path, state);else if (nm === IF) handleIf(path, state);else if (nm === ELSEIF) handleElseIf(path, state);\n        }\n      },\n\n      MemberExpression(path, state) {\n        if (types.isIdentifier(path.node.object) && (path.node.object.name === PREP || path.node.object.name === PREPROCESS)) handlePrepAccess(path, state);\n      },\n\n      CallExpression(path, state) {\n        if (types.isIdentifier(path.node.callee)) {\n          const nm = path.node.callee.name;\n          if (nm === STRINCLUDE) handleStringInclude(path, state);else if (nm === STRPROCINCLUDE) handleStringProcessInclude(path, state);\n        }\n      }\n\n    }\n  };\n}\n\nfunction handleStatement(path, state) {\n  if (state.current && state.current.prep && path.parent === state.current.parent) {\n    state.current.code.push(path.node);\n    path.remove();\n  }\n\n  if (state.current && state.current.remove && path.parent === state.current.parent) path.remove();\n}\n\nfunction handlePrepAccess(path, state) {\n  const rslt = evalAst(path.node.property);\n\n  if (Object.prototype.toString.call(rslt) === '[object String]') {\n    path.replaceWith(t.stringLiteral(rslt));\n  } else path.replaceWithSourceString(rslt);\n}\n\nfunction handlePrep(path, state) {\n  if (!state.current || state.current && state.current.satisfied && !state.current.remove) {\n    if (state.current && state.current.prep) throw path.buildCodeFrameError(`nested ${path.node.expression.name} not allowed`);\n\n    if (!state.current) {\n      state.current = {\n        satisfied: true,\n        remove: false\n      };\n    }\n\n    state.current.prep = true;\n    state.current.parent = path.parent;\n    state.current.code = [];\n    path.remove();\n  } else {\n    state.current.prep = true;\n    path.remove();\n  }\n}\n\nfunction handleEnd(path, state) {\n  if (state.current && state.current.prep) {\n    if (!state.current || state.current && state.current.satisfied && !state.current.remove) {\n      let code = '';\n\n      for (let i = 0; i < state.current.code.length; i++) code += (0, _generator.default)(state.current.code[i]).code;\n\n      evalGlobal(code);\n    }\n\n    state.current.prep = false;\n    path.remove();\n  } else if (state.current) {\n    state.current = undefined;\n\n    if (state.nested) {\n      state.current = state.nested.pop();\n\n      if (state.nested.length === 0) {\n        state.nested = undefined;\n      }\n    }\n\n    path.remove();\n  }\n}\n\nfunction handlePrepCall(path, state) {\n  if (!state.current || state.current && state.current.satisfied) {\n    for (let i = 0; i < path.node.expression.arguments.length; i++) {\n      const fname = evalAst(path.node.expression.arguments[i]);\n      if (!fs.existsSync(fname)) throw path.buildCodeFrameError(`missing preprocessor file: ${p.join(process.cwd(), fname)}`);\n\n      try {\n        const code = fs.readFileSync(fname).toString();\n        const rslt = evalGlobal(code);\n      } catch (ex) {\n        throw path.buildCodeFrameError(ex);\n      }\n    }\n  }\n\n  path.remove();\n}\n\nfunction insertCode(path, state, code, filename) {\n  const rslt = babel.transform(code, {\n    ast: true,\n    filename\n  });\n\n  for (let i = 0; i < rslt.ast.program.body.length; i++) {\n    if (state.current && state.current.prep) state.current.code.push(rslt.ast.program.body[i]);else path.insertBefore(rslt.ast.program.body[i]);\n  }\n}\n\nfunction handleInclude(path, state) {\n  if (!state.current || state.current && state.current.satisfied && !state.current.remove) {\n    for (let i = 0; i < path.node.expression.arguments.length; i++) {\n      const fname = evalAst(path.node.expression.arguments[i]);\n      if (!fs.existsSync(fname)) throw path.buildCodeFrameError(`missing include file: ${p.join(process.cwd(), fname)}`);\n      const inc = fs.readFileSync(fname).toString();\n      console.warn(inc);\n      insertCode(path, state, inc, fname);\n    }\n  }\n\n  path.remove();\n}\n\nfunction handleStringInclude(path, state) {\n  if (!state.current || state.current && state.current.satisfied && !state.current.remove) {\n    let inc = '';\n\n    for (let i = 0; i < path.node.arguments.length; i++) {\n      const fname = evalAst(path.node.arguments[i]);\n      if (!fs.existsSync(fname)) throw path.buildCodeFrameError(`missing include file: ${p.join(process.cwd(), fname)}`);\n      inc += fs.readFileSync(fname).toString();\n    }\n\n    path.replaceWith(t.stringLiteral(inc));\n  }\n}\n\nfunction handleProcInclude(path, state) {\n  if (!state.current || state.current && state.current.satisfied && !state.current.remove) {\n    let cmd = '';\n    let args = [];\n    let opts = {};\n    const len = path.node.expression.arguments.length;\n    if (len > 0) cmd = evalAst(path.node.expression.arguments[0]);\n    if (len > 1) args = eval((0, _generator.default)(path.node.expression.arguments[1]).code);\n    if (len > 2) opts = eval(`(${(0, _generator.default)(path.node.expression.arguments[2]).code})`);\n    const rslt = (0, _child_process.spawnSync)(cmd, args, opts);\n    const rsltStr = rslt.stdout ? rslt.stdout.toString() : rslt.stderr ? rslt.stderr.toString() : '';\n    insertCode(path, state, rsltStr, 'cmd');\n  }\n\n  path.remove();\n}\n\nfunction handleStringProcessInclude(path, state) {\n  if (!state.current || state.current && state.current.satisfied && !state.current.remove) {\n    let cmd = '';\n    let args = [];\n    let opts = {};\n    const len = path.node.arguments.length;\n    if (len > 0) cmd = evalAst(path.node.arguments[0]);\n    if (len > 1) args = eval((0, _generator.default)(path.node.arguments[1]).code);\n    if (len > 2) opts = eval(`(${(0, _generator.default)(path.node.arguments[2]).code})`);\n    const rslt = (0, _child_process.spawnSync)(cmd, args, opts);\n    const rsltStr = rslt.stdout ? rslt.stdout.toString() : rslt.stderr ? rslt.stderr.toString() : '';\n    path.replaceWith(t.stringLiteral(rsltStr));\n  }\n}\n\nfunction handleDefine(path, state) {\n  if (state.current && state.current.prep) throw path.buildCodeFrameError('DEFINE not allowed inside PREP, use normal variable declaration');\n  if (!state.current || state.current && state.current.satisfied && !state.current.remove) for (let i = 0; i < path.node.expression.arguments.length; i++) evalAst(path.node.expression.arguments[i]);\n  path.remove();\n}\n\nfunction handleIf(path, state) {\n  if (path.node.expression.arguments.length < 1 || path.node.expression.arguments.length > 1) throw path.buildCodeFrameError('only one argument to IF is allowed');\n  if (state.current && state.current.prep) throw path.buildCodeFrameError('IF not allowed inside PREP, use normal if statement');\n  let shouldEval = true;\n\n  if (state.current) {\n    if (state.current.remove) {\n      shouldEval = false;\n    }\n\n    if (!state.nested) state.nested = [];\n    state.nested.push(state.current);\n  } else {\n    state.current = {\n      prep: false,\n      parent: undefined\n    };\n  }\n\n  if (shouldEval) {\n    const rslt = evalAst(path.node.expression.arguments[0]);\n    state.current = rslt ? {\n      prep: state.current.prep,\n      satisfied: true,\n      remove: false,\n      code: [],\n      parent: path.parent\n    } : {\n      prep: state.current.prep,\n      satisfied: false,\n      remove: true,\n      code: [],\n      parent: path.parent\n    };\n  } else {\n    state.current = {\n      prep: state.current.prep,\n      satisfied: true,\n      remove: true,\n      code: [],\n      parent: path.parent\n    };\n  }\n\n  path.remove();\n}\n\nfunction handleElseIf(path, state) {\n  if (!state.current) throw path.buildCodeFrameError('missing IF statement');\n\n  if (state.current.satisfied) {\n    state.current.remove = true;\n  } else {\n    if (path.node.expression.arguments.length < 1 || path.node.expression.arguments.length > 1) throw path.buildCodeFrameError('only one argument to ELSEIF is allowed');\n    const rslt = evalAst(path.node.expression.arguments[0]);\n\n    if (rslt) {\n      state.current.satisfied = true;\n      state.current.remove = false;\n    } else {\n      state.current.remove = true;\n    }\n  }\n\n  path.remove();\n}\n\nfunction handleElse(path, state) {\n  if (!state.current) throw path.buildCodeFrameError('missing IF statement');\n\n  if (state.current.satisfied) {\n    state.current.remove = true;\n  } else {\n    state.current.satisfied = true;\n    state.current.remove = false;\n  }\n\n  path.remove();\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQUkVQIiwiUFJFUFJPQ0VTUyIsIkVORCIsIklOQ0xVREUiLCJTVFJJTkNMVURFIiwiREVGSU5FIiwiUFJPQ0lOQ0xVREUiLCJTVFJQUk9DSU5DTFVERSIsIklGIiwiRUxTRUlGIiwiRUxTRSIsImV2YWxBc3QiLCJub2RlIiwiZXZhbEdsb2JhbCIsImdlbmVyYXRlIiwiY29kZSIsImV2YWwiLCJfIiwidHlwZXMiLCJ2aXNpdG9yIiwiU3RhdGVtZW50IiwiZXhpdCIsInBhdGgiLCJzdGF0ZSIsImhhbmRsZVN0YXRlbWVudCIsIkV4cHJlc3Npb25TdGF0ZW1lbnQiLCJleHByZXNzaW9uIiwidHlwZSIsIm5tIiwibmFtZSIsImhhbmRsZVByZXAiLCJoYW5kbGVFbmQiLCJoYW5kbGVFbHNlIiwiaXNJZGVudGlmaWVyIiwiY2FsbGVlIiwiaGFuZGxlUHJlcENhbGwiLCJoYW5kbGVJbmNsdWRlIiwiaGFuZGxlUHJvY0luY2x1ZGUiLCJoYW5kbGVEZWZpbmUiLCJoYW5kbGVJZiIsImhhbmRsZUVsc2VJZiIsIk1lbWJlckV4cHJlc3Npb24iLCJvYmplY3QiLCJoYW5kbGVQcmVwQWNjZXNzIiwiQ2FsbEV4cHJlc3Npb24iLCJoYW5kbGVTdHJpbmdJbmNsdWRlIiwiaGFuZGxlU3RyaW5nUHJvY2Vzc0luY2x1ZGUiLCJjdXJyZW50IiwicHJlcCIsInBhcmVudCIsInB1c2giLCJyZW1vdmUiLCJyc2x0IiwicHJvcGVydHkiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJ0b1N0cmluZyIsImNhbGwiLCJyZXBsYWNlV2l0aCIsInQiLCJzdHJpbmdMaXRlcmFsIiwicmVwbGFjZVdpdGhTb3VyY2VTdHJpbmciLCJzYXRpc2ZpZWQiLCJidWlsZENvZGVGcmFtZUVycm9yIiwiaSIsImxlbmd0aCIsInVuZGVmaW5lZCIsIm5lc3RlZCIsInBvcCIsImFyZ3VtZW50cyIsImZuYW1lIiwiZnMiLCJleGlzdHNTeW5jIiwicCIsImpvaW4iLCJwcm9jZXNzIiwiY3dkIiwicmVhZEZpbGVTeW5jIiwiZXgiLCJpbnNlcnRDb2RlIiwiZmlsZW5hbWUiLCJiYWJlbCIsInRyYW5zZm9ybSIsImFzdCIsInByb2dyYW0iLCJib2R5IiwiaW5zZXJ0QmVmb3JlIiwiaW5jIiwiY29uc29sZSIsIndhcm4iLCJjbWQiLCJhcmdzIiwib3B0cyIsImxlbiIsInNwYXduU3luYyIsInJzbHRTdHIiLCJzdGRvdXQiLCJzdGRlcnIiLCJzaG91bGRFdmFsIl0sInNvdXJjZVJvb3QiOiIvVXNlcnMvamFrb2Ivd2VpcS9iYWJlbC1wcmVwcm9jZXNzb3Ivc3JjLyIsInNvdXJjZXMiOlsiaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgdCBmcm9tICdAYmFiZWwvdHlwZXMnO1xuaW1wb3J0IGdlbmVyYXRlIGZyb20gJ0BiYWJlbC9nZW5lcmF0b3InO1xuaW1wb3J0ICogYXMgZnMgZnJvbSAnZnMnO1xuaW1wb3J0ICogYXMgYmFiZWwgZnJvbSAnQGJhYmVsL2NvcmUnO1xuaW1wb3J0ICogYXMgcCBmcm9tICdwYXRoJztcbmltcG9ydCB7IHNwYXduU3luYyB9IGZyb20gJ2NoaWxkX3Byb2Nlc3MnO1xuXG5jb25zdCBQUkVQID0gJ1BSRVAnO1xuY29uc3QgUFJFUFJPQ0VTUyA9ICdQUkVQUk9DRVNTJztcbmNvbnN0IEVORCA9ICdFTkQnO1xuY29uc3QgSU5DTFVERSA9ICdJTkNMVURFJztcbmNvbnN0IFNUUklOQ0xVREUgPSAnJElOQ0xVREUnO1xuY29uc3QgREVGSU5FID0gJ0RFRklORSc7XG5jb25zdCBQUk9DSU5DTFVERSA9ICdQUk9DSU5DTFVERSc7XG5jb25zdCBTVFJQUk9DSU5DTFVERSA9ICckUFJPQ0lOQ0xVREUnO1xuY29uc3QgSUYgPSAnSUYnO1xuY29uc3QgRUxTRUlGID0gJ0VMU0VJRic7XG5jb25zdCBFTFNFID0gJ0VMU0UnO1xuXG5mdW5jdGlvbiBldmFsQXN0KG5vZGUpIHtcbiAgcmV0dXJuIGV2YWxHbG9iYWwoZ2VuZXJhdGUobm9kZSkuY29kZSk7XG59XG5mdW5jdGlvbiBldmFsR2xvYmFsKGNvZGUpIHtcbiAgcmV0dXJuICh2b2lkIDAsIGV2YWwpKGNvZGUpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfKHsgdHlwZXMgfSkge1xuICByZXR1cm4ge1xuICAgIHZpc2l0b3I6IHtcbiAgICAgIFN0YXRlbWVudDoge1xuICAgICAgICBleGl0KHBhdGgsIHN0YXRlKSB7XG4gICAgICAgICAgaGFuZGxlU3RhdGVtZW50KHBhdGgsIHN0YXRlKTtcbiAgICAgICAgfVxuICAgICAgfSxcblxuICAgICAgRXhwcmVzc2lvblN0YXRlbWVudChwYXRoLCBzdGF0ZSkge1xuICAgICAgICBpZiAocGF0aC5ub2RlLmV4cHJlc3Npb24udHlwZSA9PT0gJ0lkZW50aWZpZXInKSB7XG4gICAgICAgICAgY29uc3Qgbm0gPSBwYXRoLm5vZGUuZXhwcmVzc2lvbi5uYW1lO1xuICAgICAgICAgIGlmIChubSA9PT0gUFJFUFJPQ0VTUyB8fCBubSA9PT0gUFJFUCkgaGFuZGxlUHJlcChwYXRoLCBzdGF0ZSk7XG4gICAgICAgICAgZWxzZSBpZiAobm0gPT09IEVORCkgaGFuZGxlRW5kKHBhdGgsIHN0YXRlKTtcbiAgICAgICAgICBlbHNlIGlmIChubSA9PT0gRUxTRSkgaGFuZGxlRWxzZShwYXRoLCBzdGF0ZSk7XG4gICAgICAgIH0gZWxzZSBpZiAoXG4gICAgICAgICAgcGF0aC5ub2RlLmV4cHJlc3Npb24udHlwZSA9PT0gJ0NhbGxFeHByZXNzaW9uJyAmJlxuICAgICAgICAgIHR5cGVzLmlzSWRlbnRpZmllcihwYXRoLm5vZGUuZXhwcmVzc2lvbi5jYWxsZWUpXG4gICAgICAgICkge1xuICAgICAgICAgIGNvbnN0IG5tID0gcGF0aC5ub2RlLmV4cHJlc3Npb24uY2FsbGVlLm5hbWU7XG4gICAgICAgICAgaWYgKG5tID09PSBQUkVQUk9DRVNTIHx8IG5tID09PSBQUkVQKSBoYW5kbGVQcmVwQ2FsbChwYXRoLCBzdGF0ZSk7XG4gICAgICAgICAgZWxzZSBpZiAobm0gPT09IElOQ0xVREUpIGhhbmRsZUluY2x1ZGUocGF0aCwgc3RhdGUpO1xuICAgICAgICAgIGVsc2UgaWYgKG5tID09PSBQUk9DSU5DTFVERSkgaGFuZGxlUHJvY0luY2x1ZGUocGF0aCwgc3RhdGUpO1xuICAgICAgICAgIGVsc2UgaWYgKG5tID09PSBERUZJTkUpIGhhbmRsZURlZmluZShwYXRoLCBzdGF0ZSk7XG4gICAgICAgICAgZWxzZSBpZiAobm0gPT09IElGKSBoYW5kbGVJZihwYXRoLCBzdGF0ZSk7XG4gICAgICAgICAgZWxzZSBpZiAobm0gPT09IEVMU0VJRikgaGFuZGxlRWxzZUlmKHBhdGgsIHN0YXRlKTtcbiAgICAgICAgfVxuICAgICAgfSxcblxuICAgICAgTWVtYmVyRXhwcmVzc2lvbihwYXRoLCBzdGF0ZSkge1xuICAgICAgICBpZiAoXG4gICAgICAgICAgdHlwZXMuaXNJZGVudGlmaWVyKHBhdGgubm9kZS5vYmplY3QpICYmXG4gICAgICAgICAgKHBhdGgubm9kZS5vYmplY3QubmFtZSA9PT0gUFJFUCB8fFxuICAgICAgICAgICAgcGF0aC5ub2RlLm9iamVjdC5uYW1lID09PSBQUkVQUk9DRVNTKVxuICAgICAgICApXG4gICAgICAgICAgaGFuZGxlUHJlcEFjY2VzcyhwYXRoLCBzdGF0ZSk7XG4gICAgICB9LFxuXG4gICAgICBDYWxsRXhwcmVzc2lvbihwYXRoLCBzdGF0ZSkge1xuICAgICAgICBpZiAodHlwZXMuaXNJZGVudGlmaWVyKHBhdGgubm9kZS5jYWxsZWUpKSB7XG4gICAgICAgICAgY29uc3Qgbm0gPSBwYXRoLm5vZGUuY2FsbGVlLm5hbWU7XG5cbiAgICAgICAgICBpZiAobm0gPT09IFNUUklOQ0xVREUpIGhhbmRsZVN0cmluZ0luY2x1ZGUocGF0aCwgc3RhdGUpO1xuICAgICAgICAgIGVsc2UgaWYgKG5tID09PSBTVFJQUk9DSU5DTFVERSlcbiAgICAgICAgICAgIGhhbmRsZVN0cmluZ1Byb2Nlc3NJbmNsdWRlKHBhdGgsIHN0YXRlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gaGFuZGxlU3RhdGVtZW50KHBhdGgsIHN0YXRlKSB7XG4gIGlmIChcbiAgICBzdGF0ZS5jdXJyZW50ICYmXG4gICAgc3RhdGUuY3VycmVudC5wcmVwICYmXG4gICAgcGF0aC5wYXJlbnQgPT09IHN0YXRlLmN1cnJlbnQucGFyZW50XG4gICkge1xuICAgIHN0YXRlLmN1cnJlbnQuY29kZS5wdXNoKHBhdGgubm9kZSk7XG4gICAgcGF0aC5yZW1vdmUoKTtcbiAgfVxuXG4gIGlmIChcbiAgICBzdGF0ZS5jdXJyZW50ICYmXG4gICAgc3RhdGUuY3VycmVudC5yZW1vdmUgJiZcbiAgICBwYXRoLnBhcmVudCA9PT0gc3RhdGUuY3VycmVudC5wYXJlbnRcbiAgKVxuICAgIHBhdGgucmVtb3ZlKCk7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZVByZXBBY2Nlc3MocGF0aCwgc3RhdGUpIHtcbiAgY29uc3QgcnNsdCA9IGV2YWxBc3QocGF0aC5ub2RlLnByb3BlcnR5KTtcbiAgaWYgKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChyc2x0KSA9PT0gJ1tvYmplY3QgU3RyaW5nXScpIHtcbiAgICBwYXRoLnJlcGxhY2VXaXRoKHQuc3RyaW5nTGl0ZXJhbChyc2x0KSk7XG4gIH0gZWxzZSBwYXRoLnJlcGxhY2VXaXRoU291cmNlU3RyaW5nKHJzbHQpO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVQcmVwKHBhdGgsIHN0YXRlKSB7XG4gIGlmIChcbiAgICAhc3RhdGUuY3VycmVudCB8fFxuICAgIChzdGF0ZS5jdXJyZW50ICYmIHN0YXRlLmN1cnJlbnQuc2F0aXNmaWVkICYmICFzdGF0ZS5jdXJyZW50LnJlbW92ZSlcbiAgKSB7XG4gICAgaWYgKHN0YXRlLmN1cnJlbnQgJiYgc3RhdGUuY3VycmVudC5wcmVwKVxuICAgICAgdGhyb3cgcGF0aC5idWlsZENvZGVGcmFtZUVycm9yKFxuICAgICAgICBgbmVzdGVkICR7cGF0aC5ub2RlLmV4cHJlc3Npb24ubmFtZX0gbm90IGFsbG93ZWRgXG4gICAgICApO1xuICAgIGlmICghc3RhdGUuY3VycmVudCkge1xuICAgICAgc3RhdGUuY3VycmVudCA9IHtcbiAgICAgICAgc2F0aXNmaWVkOiB0cnVlLFxuICAgICAgICByZW1vdmU6IGZhbHNlXG4gICAgICB9O1xuICAgIH1cbiAgICBzdGF0ZS5jdXJyZW50LnByZXAgPSB0cnVlO1xuICAgIHN0YXRlLmN1cnJlbnQucGFyZW50ID0gcGF0aC5wYXJlbnQ7XG4gICAgc3RhdGUuY3VycmVudC5jb2RlID0gW107XG4gICAgcGF0aC5yZW1vdmUoKTtcbiAgfSBlbHNlIHtcbiAgICBzdGF0ZS5jdXJyZW50LnByZXAgPSB0cnVlO1xuICAgIHBhdGgucmVtb3ZlKCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gaGFuZGxlRW5kKHBhdGgsIHN0YXRlKSB7XG4gIGlmIChzdGF0ZS5jdXJyZW50ICYmIHN0YXRlLmN1cnJlbnQucHJlcCkge1xuICAgIGlmIChcbiAgICAgICFzdGF0ZS5jdXJyZW50IHx8XG4gICAgICAoc3RhdGUuY3VycmVudCAmJiBzdGF0ZS5jdXJyZW50LnNhdGlzZmllZCAmJiAhc3RhdGUuY3VycmVudC5yZW1vdmUpXG4gICAgKSB7XG4gICAgICBsZXQgY29kZSA9ICcnO1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzdGF0ZS5jdXJyZW50LmNvZGUubGVuZ3RoOyBpKyspXG4gICAgICAgIGNvZGUgKz0gZ2VuZXJhdGUoc3RhdGUuY3VycmVudC5jb2RlW2ldKS5jb2RlO1xuICAgICAgZXZhbEdsb2JhbChjb2RlKTtcbiAgICB9XG4gICAgc3RhdGUuY3VycmVudC5wcmVwID0gZmFsc2U7XG4gICAgcGF0aC5yZW1vdmUoKTtcbiAgfSBlbHNlIGlmIChzdGF0ZS5jdXJyZW50KSB7XG4gICAgc3RhdGUuY3VycmVudCA9IHVuZGVmaW5lZDtcbiAgICBpZiAoc3RhdGUubmVzdGVkKSB7XG4gICAgICBzdGF0ZS5jdXJyZW50ID0gc3RhdGUubmVzdGVkLnBvcCgpO1xuICAgICAgaWYgKHN0YXRlLm5lc3RlZC5sZW5ndGggPT09IDApIHtcbiAgICAgICAgc3RhdGUubmVzdGVkID0gdW5kZWZpbmVkO1xuICAgICAgfVxuICAgIH1cbiAgICBwYXRoLnJlbW92ZSgpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGhhbmRsZVByZXBDYWxsKHBhdGgsIHN0YXRlKSB7XG4gIGlmICghc3RhdGUuY3VycmVudCB8fCAoc3RhdGUuY3VycmVudCAmJiBzdGF0ZS5jdXJyZW50LnNhdGlzZmllZCkpIHtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHBhdGgubm9kZS5leHByZXNzaW9uLmFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgY29uc3QgZm5hbWUgPSBldmFsQXN0KHBhdGgubm9kZS5leHByZXNzaW9uLmFyZ3VtZW50c1tpXSk7XG4gICAgICBpZiAoIWZzLmV4aXN0c1N5bmMoZm5hbWUpKVxuICAgICAgICB0aHJvdyBwYXRoLmJ1aWxkQ29kZUZyYW1lRXJyb3IoXG4gICAgICAgICAgYG1pc3NpbmcgcHJlcHJvY2Vzc29yIGZpbGU6ICR7cC5qb2luKHByb2Nlc3MuY3dkKCksIGZuYW1lKX1gXG4gICAgICAgICk7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCBjb2RlID0gZnMucmVhZEZpbGVTeW5jKGZuYW1lKS50b1N0cmluZygpO1xuICAgICAgICBjb25zdCByc2x0ID0gZXZhbEdsb2JhbChjb2RlKTtcbiAgICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAgIHRocm93IHBhdGguYnVpbGRDb2RlRnJhbWVFcnJvcihleCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcGF0aC5yZW1vdmUoKTtcbn1cblxuZnVuY3Rpb24gaW5zZXJ0Q29kZShwYXRoLCBzdGF0ZSwgY29kZSwgZmlsZW5hbWUpIHtcbiAgY29uc3QgcnNsdCA9IGJhYmVsLnRyYW5zZm9ybShjb2RlLCB7IGFzdDogdHJ1ZSwgZmlsZW5hbWUgfSk7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgcnNsdC5hc3QucHJvZ3JhbS5ib2R5Lmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0YXRlLmN1cnJlbnQgJiYgc3RhdGUuY3VycmVudC5wcmVwKVxuICAgICAgc3RhdGUuY3VycmVudC5jb2RlLnB1c2gocnNsdC5hc3QucHJvZ3JhbS5ib2R5W2ldKTtcbiAgICBlbHNlIHBhdGguaW5zZXJ0QmVmb3JlKHJzbHQuYXN0LnByb2dyYW0uYm9keVtpXSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gaGFuZGxlSW5jbHVkZShwYXRoLCBzdGF0ZSkge1xuICBpZiAoXG4gICAgIXN0YXRlLmN1cnJlbnQgfHxcbiAgICAoc3RhdGUuY3VycmVudCAmJiBzdGF0ZS5jdXJyZW50LnNhdGlzZmllZCAmJiAhc3RhdGUuY3VycmVudC5yZW1vdmUpXG4gICkge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcGF0aC5ub2RlLmV4cHJlc3Npb24uYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBjb25zdCBmbmFtZSA9IGV2YWxBc3QocGF0aC5ub2RlLmV4cHJlc3Npb24uYXJndW1lbnRzW2ldKTtcbiAgICAgIGlmICghZnMuZXhpc3RzU3luYyhmbmFtZSkpXG4gICAgICAgIHRocm93IHBhdGguYnVpbGRDb2RlRnJhbWVFcnJvcihcbiAgICAgICAgICBgbWlzc2luZyBpbmNsdWRlIGZpbGU6ICR7cC5qb2luKHByb2Nlc3MuY3dkKCksIGZuYW1lKX1gXG4gICAgICAgICk7XG4gICAgICBjb25zdCBpbmMgPSBmcy5yZWFkRmlsZVN5bmMoZm5hbWUpLnRvU3RyaW5nKCk7XG4gICAgICBjb25zb2xlLndhcm4oaW5jKVxuICAgICAgaW5zZXJ0Q29kZShwYXRoLCBzdGF0ZSwgaW5jLCBmbmFtZSk7XG4gICAgfVxuICB9XG4gIHBhdGgucmVtb3ZlKCk7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZVN0cmluZ0luY2x1ZGUocGF0aCwgc3RhdGUpIHtcbiAgaWYgKFxuICAgICFzdGF0ZS5jdXJyZW50IHx8XG4gICAgKHN0YXRlLmN1cnJlbnQgJiYgc3RhdGUuY3VycmVudC5zYXRpc2ZpZWQgJiYgIXN0YXRlLmN1cnJlbnQucmVtb3ZlKVxuICApIHtcbiAgICBsZXQgaW5jID0gJyc7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwYXRoLm5vZGUuYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBjb25zdCBmbmFtZSA9IGV2YWxBc3QocGF0aC5ub2RlLmFyZ3VtZW50c1tpXSk7XG4gICAgICBpZiAoIWZzLmV4aXN0c1N5bmMoZm5hbWUpKVxuICAgICAgICB0aHJvdyBwYXRoLmJ1aWxkQ29kZUZyYW1lRXJyb3IoXG4gICAgICAgICAgYG1pc3NpbmcgaW5jbHVkZSBmaWxlOiAke3Auam9pbihwcm9jZXNzLmN3ZCgpLCBmbmFtZSl9YFxuICAgICAgICApO1xuICAgICAgaW5jICs9IGZzLnJlYWRGaWxlU3luYyhmbmFtZSkudG9TdHJpbmcoKTtcbiAgICB9XG5cbiAgICBwYXRoLnJlcGxhY2VXaXRoKHQuc3RyaW5nTGl0ZXJhbChpbmMpKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBoYW5kbGVQcm9jSW5jbHVkZShwYXRoLCBzdGF0ZSkge1xuICBpZiAoXG4gICAgIXN0YXRlLmN1cnJlbnQgfHxcbiAgICAoc3RhdGUuY3VycmVudCAmJiBzdGF0ZS5jdXJyZW50LnNhdGlzZmllZCAmJiAhc3RhdGUuY3VycmVudC5yZW1vdmUpXG4gICkge1xuICAgIGxldCBjbWQgPSAnJztcbiAgICBsZXQgYXJncyA9IFtdO1xuICAgIGxldCBvcHRzID0ge307XG4gICAgY29uc3QgbGVuID0gcGF0aC5ub2RlLmV4cHJlc3Npb24uYXJndW1lbnRzLmxlbmd0aDtcbiAgICBpZiAobGVuID4gMCkgY21kID0gZXZhbEFzdChwYXRoLm5vZGUuZXhwcmVzc2lvbi5hcmd1bWVudHNbMF0pO1xuICAgIGlmIChsZW4gPiAxKSBhcmdzID0gZXZhbChnZW5lcmF0ZShwYXRoLm5vZGUuZXhwcmVzc2lvbi5hcmd1bWVudHNbMV0pLmNvZGUpO1xuICAgIGlmIChsZW4gPiAyKVxuICAgICAgb3B0cyA9IGV2YWwoYCgke2dlbmVyYXRlKHBhdGgubm9kZS5leHByZXNzaW9uLmFyZ3VtZW50c1syXSkuY29kZX0pYCk7XG5cbiAgICBjb25zdCByc2x0ID0gc3Bhd25TeW5jKGNtZCwgYXJncywgb3B0cyk7XG4gICAgY29uc3QgcnNsdFN0ciA9IHJzbHQuc3Rkb3V0XG4gICAgICA/IHJzbHQuc3Rkb3V0LnRvU3RyaW5nKClcbiAgICAgIDogcnNsdC5zdGRlcnJcbiAgICAgID8gcnNsdC5zdGRlcnIudG9TdHJpbmcoKVxuICAgICAgOiAnJztcblxuICAgIGluc2VydENvZGUocGF0aCwgc3RhdGUsIHJzbHRTdHIsICdjbWQnKTtcbiAgfVxuICBwYXRoLnJlbW92ZSgpO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVTdHJpbmdQcm9jZXNzSW5jbHVkZShwYXRoLCBzdGF0ZSkge1xuICBpZiAoXG4gICAgIXN0YXRlLmN1cnJlbnQgfHxcbiAgICAoc3RhdGUuY3VycmVudCAmJiBzdGF0ZS5jdXJyZW50LnNhdGlzZmllZCAmJiAhc3RhdGUuY3VycmVudC5yZW1vdmUpXG4gICkge1xuICAgIGxldCBjbWQgPSAnJztcbiAgICBsZXQgYXJncyA9IFtdO1xuICAgIGxldCBvcHRzID0ge307XG4gICAgY29uc3QgbGVuID0gcGF0aC5ub2RlLmFyZ3VtZW50cy5sZW5ndGg7XG4gICAgaWYgKGxlbiA+IDApIGNtZCA9IGV2YWxBc3QocGF0aC5ub2RlLmFyZ3VtZW50c1swXSk7XG4gICAgaWYgKGxlbiA+IDEpIGFyZ3MgPSBldmFsKGdlbmVyYXRlKHBhdGgubm9kZS5hcmd1bWVudHNbMV0pLmNvZGUpO1xuICAgIGlmIChsZW4gPiAyKSBvcHRzID0gZXZhbChgKCR7Z2VuZXJhdGUocGF0aC5ub2RlLmFyZ3VtZW50c1syXSkuY29kZX0pYCk7XG5cbiAgICBjb25zdCByc2x0ID0gc3Bhd25TeW5jKGNtZCwgYXJncywgb3B0cyk7XG4gICAgY29uc3QgcnNsdFN0ciA9IHJzbHQuc3Rkb3V0XG4gICAgICA/IHJzbHQuc3Rkb3V0LnRvU3RyaW5nKClcbiAgICAgIDogcnNsdC5zdGRlcnJcbiAgICAgID8gcnNsdC5zdGRlcnIudG9TdHJpbmcoKVxuICAgICAgOiAnJztcbiAgICBwYXRoLnJlcGxhY2VXaXRoKHQuc3RyaW5nTGl0ZXJhbChyc2x0U3RyKSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gaGFuZGxlRGVmaW5lKHBhdGgsIHN0YXRlKSB7XG4gIGlmIChzdGF0ZS5jdXJyZW50ICYmIHN0YXRlLmN1cnJlbnQucHJlcClcbiAgICB0aHJvdyBwYXRoLmJ1aWxkQ29kZUZyYW1lRXJyb3IoXG4gICAgICAnREVGSU5FIG5vdCBhbGxvd2VkIGluc2lkZSBQUkVQLCB1c2Ugbm9ybWFsIHZhcmlhYmxlIGRlY2xhcmF0aW9uJ1xuICAgICk7XG5cbiAgaWYgKFxuICAgICFzdGF0ZS5jdXJyZW50IHx8XG4gICAgKHN0YXRlLmN1cnJlbnQgJiYgc3RhdGUuY3VycmVudC5zYXRpc2ZpZWQgJiYgIXN0YXRlLmN1cnJlbnQucmVtb3ZlKVxuICApXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwYXRoLm5vZGUuZXhwcmVzc2lvbi5hcmd1bWVudHMubGVuZ3RoOyBpKyspXG4gICAgICBldmFsQXN0KHBhdGgubm9kZS5leHByZXNzaW9uLmFyZ3VtZW50c1tpXSk7XG4gIHBhdGgucmVtb3ZlKCk7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZUlmKHBhdGgsIHN0YXRlKSB7XG4gIGlmIChcbiAgICBwYXRoLm5vZGUuZXhwcmVzc2lvbi5hcmd1bWVudHMubGVuZ3RoIDwgMSB8fFxuICAgIHBhdGgubm9kZS5leHByZXNzaW9uLmFyZ3VtZW50cy5sZW5ndGggPiAxXG4gIClcbiAgICB0aHJvdyBwYXRoLmJ1aWxkQ29kZUZyYW1lRXJyb3IoJ29ubHkgb25lIGFyZ3VtZW50IHRvIElGIGlzIGFsbG93ZWQnKTtcblxuICBpZiAoc3RhdGUuY3VycmVudCAmJiBzdGF0ZS5jdXJyZW50LnByZXApXG4gICAgdGhyb3cgcGF0aC5idWlsZENvZGVGcmFtZUVycm9yKFxuICAgICAgJ0lGIG5vdCBhbGxvd2VkIGluc2lkZSBQUkVQLCB1c2Ugbm9ybWFsIGlmIHN0YXRlbWVudCdcbiAgICApO1xuXG4gIGxldCBzaG91bGRFdmFsID0gdHJ1ZTtcblxuICBpZiAoc3RhdGUuY3VycmVudCkge1xuICAgIGlmIChzdGF0ZS5jdXJyZW50LnJlbW92ZSkge1xuICAgICAgc2hvdWxkRXZhbCA9IGZhbHNlO1xuICAgIH1cbiAgICBpZiAoIXN0YXRlLm5lc3RlZCkgc3RhdGUubmVzdGVkID0gW107XG4gICAgc3RhdGUubmVzdGVkLnB1c2goc3RhdGUuY3VycmVudCk7XG4gIH0gZWxzZSB7XG4gICAgc3RhdGUuY3VycmVudCA9IHsgcHJlcDogZmFsc2UsIHBhcmVudDogdW5kZWZpbmVkIH07XG4gIH1cblxuICBpZiAoc2hvdWxkRXZhbCkge1xuICAgIGNvbnN0IHJzbHQgPSBldmFsQXN0KHBhdGgubm9kZS5leHByZXNzaW9uLmFyZ3VtZW50c1swXSk7XG5cbiAgICBzdGF0ZS5jdXJyZW50ID0gcnNsdFxuICAgICAgPyB7XG4gICAgICAgICAgcHJlcDogc3RhdGUuY3VycmVudC5wcmVwLFxuICAgICAgICAgIHNhdGlzZmllZDogdHJ1ZSxcbiAgICAgICAgICByZW1vdmU6IGZhbHNlLFxuICAgICAgICAgIGNvZGU6IFtdLFxuICAgICAgICAgIHBhcmVudDogcGF0aC5wYXJlbnRcbiAgICAgICAgfVxuICAgICAgOiB7XG4gICAgICAgICAgcHJlcDogc3RhdGUuY3VycmVudC5wcmVwLFxuICAgICAgICAgIHNhdGlzZmllZDogZmFsc2UsXG4gICAgICAgICAgcmVtb3ZlOiB0cnVlLFxuICAgICAgICAgIGNvZGU6IFtdLFxuICAgICAgICAgIHBhcmVudDogcGF0aC5wYXJlbnRcbiAgICAgICAgfTtcbiAgfSBlbHNlIHtcbiAgICBzdGF0ZS5jdXJyZW50ID0ge1xuICAgICAgcHJlcDogc3RhdGUuY3VycmVudC5wcmVwLFxuICAgICAgc2F0aXNmaWVkOiB0cnVlLFxuICAgICAgcmVtb3ZlOiB0cnVlLFxuICAgICAgY29kZTogW10sXG4gICAgICBwYXJlbnQ6IHBhdGgucGFyZW50XG4gICAgfTtcbiAgfVxuXG4gIHBhdGgucmVtb3ZlKCk7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZUVsc2VJZihwYXRoLCBzdGF0ZSkge1xuICBpZiAoIXN0YXRlLmN1cnJlbnQpIHRocm93IHBhdGguYnVpbGRDb2RlRnJhbWVFcnJvcignbWlzc2luZyBJRiBzdGF0ZW1lbnQnKTtcblxuICBpZiAoc3RhdGUuY3VycmVudC5zYXRpc2ZpZWQpIHtcbiAgICBzdGF0ZS5jdXJyZW50LnJlbW92ZSA9IHRydWU7XG4gIH0gZWxzZSB7XG4gICAgaWYgKFxuICAgICAgcGF0aC5ub2RlLmV4cHJlc3Npb24uYXJndW1lbnRzLmxlbmd0aCA8IDEgfHxcbiAgICAgIHBhdGgubm9kZS5leHByZXNzaW9uLmFyZ3VtZW50cy5sZW5ndGggPiAxXG4gICAgKVxuICAgICAgdGhyb3cgcGF0aC5idWlsZENvZGVGcmFtZUVycm9yKCdvbmx5IG9uZSBhcmd1bWVudCB0byBFTFNFSUYgaXMgYWxsb3dlZCcpO1xuXG4gICAgY29uc3QgcnNsdCA9IGV2YWxBc3QocGF0aC5ub2RlLmV4cHJlc3Npb24uYXJndW1lbnRzWzBdKTtcbiAgICBpZiAocnNsdCkge1xuICAgICAgc3RhdGUuY3VycmVudC5zYXRpc2ZpZWQgPSB0cnVlO1xuICAgICAgc3RhdGUuY3VycmVudC5yZW1vdmUgPSBmYWxzZTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3RhdGUuY3VycmVudC5yZW1vdmUgPSB0cnVlO1xuICAgIH1cbiAgfVxuICBwYXRoLnJlbW92ZSgpO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVFbHNlKHBhdGgsIHN0YXRlKSB7XG4gIGlmICghc3RhdGUuY3VycmVudCkgdGhyb3cgcGF0aC5idWlsZENvZGVGcmFtZUVycm9yKCdtaXNzaW5nIElGIHN0YXRlbWVudCcpO1xuXG4gIGlmIChzdGF0ZS5jdXJyZW50LnNhdGlzZmllZCkge1xuICAgIHN0YXRlLmN1cnJlbnQucmVtb3ZlID0gdHJ1ZTtcbiAgfSBlbHNlIHtcbiAgICBzdGF0ZS5jdXJyZW50LnNhdGlzZmllZCA9IHRydWU7XG4gICAgc3RhdGUuY3VycmVudC5yZW1vdmUgPSBmYWxzZTtcbiAgfVxuICBwYXRoLnJlbW92ZSgpO1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7O0FBRUEsTUFBTUEsSUFBSSxHQUFHLE1BQWI7QUFDQSxNQUFNQyxVQUFVLEdBQUcsWUFBbkI7QUFDQSxNQUFNQyxHQUFHLEdBQUcsS0FBWjtBQUNBLE1BQU1DLE9BQU8sR0FBRyxTQUFoQjtBQUNBLE1BQU1DLFVBQVUsR0FBRyxVQUFuQjtBQUNBLE1BQU1DLE1BQU0sR0FBRyxRQUFmO0FBQ0EsTUFBTUMsV0FBVyxHQUFHLGFBQXBCO0FBQ0EsTUFBTUMsY0FBYyxHQUFHLGNBQXZCO0FBQ0EsTUFBTUMsRUFBRSxHQUFHLElBQVg7QUFDQSxNQUFNQyxNQUFNLEdBQUcsUUFBZjtBQUNBLE1BQU1DLElBQUksR0FBRyxNQUFiOztBQUVBLFNBQVNDLE9BQVQsQ0FBaUJDLElBQWpCLEVBQXVCO0VBQ3JCLE9BQU9DLFVBQVUsQ0FBQyxJQUFBQyxrQkFBQSxFQUFTRixJQUFULEVBQWVHLElBQWhCLENBQWpCO0FBQ0Q7O0FBQ0QsU0FBU0YsVUFBVCxDQUFvQkUsSUFBcEIsRUFBMEI7RUFDeEIsT0FBTyxDQUFDLEtBQUssQ0FBTCxFQUFRQyxJQUFULEVBQWVELElBQWYsQ0FBUDtBQUNEOztBQUVjLFNBQVNFLENBQVQsQ0FBVztFQUFFQztBQUFGLENBQVgsRUFBc0I7RUFDbkMsT0FBTztJQUNMQyxPQUFPLEVBQUU7TUFDUEMsU0FBUyxFQUFFO1FBQ1RDLElBQUksQ0FBQ0MsSUFBRCxFQUFPQyxLQUFQLEVBQWM7VUFDaEJDLGVBQWUsQ0FBQ0YsSUFBRCxFQUFPQyxLQUFQLENBQWY7UUFDRDs7TUFIUSxDQURKOztNQU9QRSxtQkFBbUIsQ0FBQ0gsSUFBRCxFQUFPQyxLQUFQLEVBQWM7UUFDL0IsSUFBSUQsSUFBSSxDQUFDVixJQUFMLENBQVVjLFVBQVYsQ0FBcUJDLElBQXJCLEtBQThC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","map":{"version":3,"names":["PREP","PREPROCESS","END","INCLUDE","STRINCLUDE","DEFINE","PROCINCLUDE","STRPROCINCLUDE","IF","ELSEIF","ELSE","evalAst","node","evalGlobal","generate","code","eval","_","types","visitor","Statement","exit","path","state","handleStatement","ExpressionStatement","expression","type","nm","name","handlePrep","handleEnd","handleElse","isIdentifier","callee","handlePrepCall","handleInclude","handleProcInclude","handleDefine","handleIf","handleElseIf","MemberExpression","object","handlePrepAccess","CallExpression","handleStringInclude","handleStringProcessInclude","current","prep","parent","push","remove","rslt","property","Object","prototype","toString","call","replaceWith","t","stringLiteral","replaceWithSourceString","satisfied","buildCodeFrameError","i","length","undefined","nested","pop","arguments","fname","fs","existsSync","p","join","process","cwd","readFileSync","ex","insertCode","filename","babel","transform","ast","program","body","insertBefore","inc","console","warn","cmd","args","opts","len","spawnSync","rsltStr","stdout","stderr","shouldEval"],"sourceRoot":"/Users/jakob/weiq/babel-preprocessor/src/","sources":["index.js"],"sourcesContent":["import * as t from '@babel/types';\nimport generate from '@babel/generator';\nimport * as fs from 'fs';\nimport * as babel from '@babel/core';\nimport * as p from 'path';\nimport { spawnSync } from 'child_process';\n\nconst PREP = 'PREP';\nconst PREPROCESS = 'PREPROCESS';\nconst END = 'END';\nconst INCLUDE = 'INCLUDE';\nconst STRINCLUDE = '$INCLUDE';\nconst DEFINE = 'DEFINE';\nconst PROCINCLUDE = 'PROCINCLUDE';\nconst STRPROCINCLUDE = '$PROCINCLUDE';\nconst IF = 'IF';\nconst ELSEIF = 'ELSEIF';\nconst ELSE = 'ELSE';\n\nfunction evalAst(node) {\n  return evalGlobal(generate(node).code);\n}\nfunction evalGlobal(code) {\n  return (void 0, eval)(code);\n}\n\nexport default function _({ types }) {\n  return {\n    visitor: {\n      Statement: {\n        exit(path, state) {\n          handleStatement(path, state);\n        }\n      },\n\n      ExpressionStatement(path, state) {\n        if (path.node.expression.type === 'Identifier') {\n          const nm = path.node.expression.name;\n          if (nm === PREPROCESS || nm === PREP) handlePrep(path, state);\n          else if (nm === END) handleEnd(path, state);\n          else if (nm === ELSE) handleElse(path, state);\n        } else if (\n          path.node.expression.type === 'CallExpression' &&\n          types.isIdentifier(path.node.expression.callee)\n        ) {\n          const nm = path.node.expression.callee.name;\n          if (nm === PREPROCESS || nm === PREP) handlePrepCall(path, state);\n          else if (nm === INCLUDE) handleInclude(path, state);\n          else if (nm === PROCINCLUDE) handleProcInclude(path, state);\n          else if (nm === DEFINE) handleDefine(path, state);\n          else if (nm === IF) handleIf(path, state);\n          else if (nm === ELSEIF) handleElseIf(path, state);\n        }\n      },\n\n      MemberExpression(path, state) {\n        if (\n          types.isIdentifier(path.node.object) &&\n          (path.node.object.name === PREP ||\n            path.node.object.name === PREPROCESS)\n        )\n          handlePrepAccess(path, state);\n      },\n\n      CallExpression(path, state) {\n        if (types.isIdentifier(path.node.callee)) {\n          const nm = path.node.callee.name;\n\n          if (nm === STRINCLUDE) handleStringInclude(path, state);\n          else if (nm === STRPROCINCLUDE)\n            handleStringProcessInclude(path, state);\n        }\n      }\n    }\n  };\n}\n\nfunction handleStatement(path, state) {\n  if (\n    state.current &&\n    state.current.prep &&\n    path.parent === state.current.parent\n  ) {\n    state.current.code.push(path.node);\n    path.remove();\n  }\n\n  if (\n    state.current &&\n    state.current.remove &&\n    path.parent === state.current.parent\n  )\n    path.remove();\n}\n\nfunction handlePrepAccess(path, state) {\n  const rslt = evalAst(path.node.property);\n  if (Object.prototype.toString.call(rslt) === '[object String]') {\n    path.replaceWith(t.stringLiteral(rslt));\n  } else path.replaceWithSourceString(rslt);\n}\n\nfunction handlePrep(path, state) {\n  if (\n    !state.current ||\n    (state.current && state.current.satisfied && !state.current.remove)\n  ) {\n    if (state.current && state.current.prep)\n      throw path.buildCodeFrameError(\n        `nested ${path.node.expression.name} not allowed`\n      );\n    if (!state.current) {\n      state.current = {\n        satisfied: true,\n        remove: false\n      };\n    }\n    state.current.prep = true;\n    state.current.parent = path.parent;\n    state.current.code = [];\n    path.remove();\n  } else {\n    state.current.prep = true;\n    path.remove();\n  }\n}\n\nfunction handleEnd(path, state) {\n  if (state.current && state.current.prep) {\n    if (\n      !state.current ||\n      (state.current && state.current.satisfied && !state.current.remove)\n    ) {\n      let code = '';\n      for (let i = 0; i < state.current.code.length; i++)\n        code += generate(state.current.code[i]).code;\n      evalGlobal(code);\n    }\n    state.current.prep = false;\n    path.remove();\n  } else if (state.current) {\n    state.current = undefined;\n    if (state.nested) {\n      state.current = state.nested.pop();\n      if (state.nested.length === 0) {\n        state.nested = undefined;\n      }\n    }\n    path.remove();\n  }\n}\n\nfunction handlePrepCall(path, state) {\n  if (!state.current || (state.current && state.current.satisfied)) {\n    for (let i = 0; i < path.node.expression.arguments.length; i++) {\n      const fname = evalAst(path.node.expression.arguments[i]);\n      if (!fs.existsSync(fname))\n        throw path.buildCodeFrameError(\n          `missing preprocessor file: ${p.join(process.cwd(), fname)}`\n        );\n      try {\n        const code = fs.readFileSync(fname).toString();\n        const rslt = evalGlobal(code);\n      } catch (ex) {\n        throw path.buildCodeFrameError(ex);\n      }\n    }\n  }\n\n  path.remove();\n}\n\nfunction insertCode(path, state, code, filename) {\n  const rslt = babel.transform(code, { ast: true, filename });\n  for (let i = 0; i < rslt.ast.program.body.length; i++) {\n    if (state.current && state.current.prep)\n      state.current.code.push(rslt.ast.program.body[i]);\n    else path.insertBefore(rslt.ast.program.body[i]);\n  }\n}\n\nfunction handleInclude(path, state) {\n  if (\n    !state.current ||\n    (state.current && state.current.satisfied && !state.current.remove)\n  ) {\n    for (let i = 0; i < path.node.expression.arguments.length; i++) {\n      const fname = evalAst(path.node.expression.arguments[i]);\n      if (!fs.existsSync(fname))\n        throw path.buildCodeFrameError(\n          `missing include file: ${p.join(process.cwd(), fname)}`\n        );\n      const inc = fs.readFileSync(fname).toString();\n      console.warn(inc)\n      insertCode(path, state, inc, fname);\n    }\n  }\n  path.remove();\n}\n\nfunction handleStringInclude(path, state) {\n  if (\n    !state.current ||\n    (state.current && state.current.satisfied && !state.current.remove)\n  ) {\n    let inc = '';\n    for (let i = 0; i < path.node.arguments.length; i++) {\n      const fname = evalAst(path.node.arguments[i]);\n      if (!fs.existsSync(fname))\n        throw path.buildCodeFrameError(\n          `missing include file: ${p.join(process.cwd(), fname)}`\n        );\n      inc += fs.readFileSync(fname).toString();\n    }\n\n    path.replaceWith(t.stringLiteral(inc));\n  }\n}\n\nfunction handleProcInclude(path, state) {\n  if (\n    !state.current ||\n    (state.current && state.current.satisfied && !state.current.remove)\n  ) {\n    let cmd = '';\n    let args = [];\n    let opts = {};\n    const len = path.node.expression.arguments.length;\n    if (len > 0) cmd = evalAst(path.node.expression.arguments[0]);\n    if (len > 1) args = eval(generate(path.node.expression.arguments[1]).code);\n    if (len > 2)\n      opts = eval(`(${generate(path.node.expression.arguments[2]).code})`);\n\n    const rslt = spawnSync(cmd, args, opts);\n    const rsltStr = rslt.stdout\n      ? rslt.stdout.toString()\n      : rslt.stderr\n      ? rslt.stderr.toString()\n      : '';\n\n    insertCode(path, state, rsltStr, 'cmd');\n  }\n  path.remove();\n}\n\nfunction handleStringProcessInclude(path, state) {\n  if (\n    !state.current ||\n    (state.current && state.current.satisfied && !state.current.remove)\n  ) {\n    let cmd = '';\n    let args = [];\n    let opts = {};\n    const len = path.node.arguments.length;\n    if (len > 0) cmd = evalAst(path.node.arguments[0]);\n    if (len > 1) args = eval(generate(path.node.arguments[1]).code);\n    if (len > 2) opts = eval(`(${generate(path.node.arguments[2]).code})`);\n\n    const rslt = spawnSync(cmd, args, opts);\n    const rsltStr = rslt.stdout\n      ? rslt.stdout.toString()\n      : rslt.stderr\n      ? rslt.stderr.toString()\n      : '';\n    path.replaceWith(t.stringLiteral(rsltStr));\n  }\n}\n\nfunction handleDefine(path, state) {\n  if (state.current && state.current.prep)\n    throw path.buildCodeFrameError(\n      'DEFINE not allowed inside PREP, use normal variable declaration'\n    );\n\n  if (\n    !state.current ||\n    (state.current && state.current.satisfied && !state.current.remove)\n  )\n    for (let i = 0; i < path.node.expression.arguments.length; i++)\n      evalAst(path.node.expression.arguments[i]);\n  path.remove();\n}\n\nfunction handleIf(path, state) {\n  if (\n    path.node.expression.arguments.length < 1 ||\n    path.node.expression.arguments.length > 1\n  )\n    throw path.buildCodeFrameError('only one argument to IF is allowed');\n\n  if (state.current && state.current.prep)\n    throw path.buildCodeFrameError(\n      'IF not allowed inside PREP, use normal if statement'\n    );\n\n  let shouldEval = true;\n\n  if (state.current) {\n    if (state.current.remove) {\n      shouldEval = false;\n    }\n    if (!state.nested) state.nested = [];\n    state.nested.push(state.current);\n  } else {\n    state.current = { prep: false, parent: undefined };\n  }\n\n  if (shouldEval) {\n    const rslt = evalAst(path.node.expression.arguments[0]);\n\n    state.current = rslt\n      ? {\n          prep: state.current.prep,\n          satisfied: true,\n          remove: false,\n          code: [],\n          parent: path.parent\n        }\n      : {\n          prep: state.current.prep,\n          satisfied: false,\n          remove: true,\n          code: [],\n          parent: path.parent\n        };\n  } else {\n    state.current = {\n      prep: state.current.prep,\n      satisfied: true,\n      remove: true,\n      code: [],\n      parent: path.parent\n    };\n  }\n\n  path.remove();\n}\n\nfunction handleElseIf(path, state) {\n  if (!state.current) throw path.buildCodeFrameError('missing IF statement');\n\n  if (state.current.satisfied) {\n    state.current.remove = true;\n  } else {\n    if (\n      path.node.expression.arguments.length < 1 ||\n      path.node.expression.arguments.length > 1\n    )\n      throw path.buildCodeFrameError('only one argument to ELSEIF is allowed');\n\n    const rslt = evalAst(path.node.expression.arguments[0]);\n    if (rslt) {\n      state.current.satisfied = true;\n      state.current.remove = false;\n    } else {\n      state.current.remove = true;\n    }\n  }\n  path.remove();\n}\n\nfunction handleElse(path, state) {\n  if (!state.current) throw path.buildCodeFrameError('missing IF statement');\n\n  if (state.current.satisfied) {\n    state.current.remove = true;\n  } else {\n    state.current.satisfied = true;\n    state.current.remove = false;\n  }\n  path.remove();\n}\n"],"mappings":"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"}},"mtime":1663140438986}}